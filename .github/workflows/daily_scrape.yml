name: Daily Product Scrape and Update
on:
  schedule:
    - cron: '0 20 * * *'
  workflow_dispatch:
    inputs:
      run_watsons:
        description: 'Run Watsons scraper'
        required: false
        type: boolean
        default: false
      run_poya:
        description: 'Run Poya scraper'
        required: false
        type: boolean
        default: false
      run_cosmed:
        description: 'Run Cosmed scraper'
        required: false
        type: boolean
        default: false
      run_all:
        description: 'Run all scrapers'
        required: false
        type: boolean
        default: true

jobs:
  scrape_and_update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Set up Git
        run: |
          git config --local user.email "amyhsiao@gmail.com"
          git config --local user.name "amyhsiao"

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager beautifulsoup4 requests tqdm

      - name: Run Watsons scraping script
        if: github.event_name == 'schedule' || github.event.inputs.run_watsons == 'true' || github.event.inputs.run_all == 'true'
        id: scrape_watsons
        run: python scrape_watsons.py
        continue-on-error: true 

      - name: Run Poya scraping script
        if: github.event_name == 'schedule' || github.event.inputs.run_poya == 'true' || github.event.inputs.run_all == 'true'
        id: scrape_poya
        run: python scrape_poya.py
        continue-on-error: true

      - name: Run Cosmed scraping script
        if: github.event_name == 'schedule' || github.event.inputs.run_cosmed == 'true' || github.event.inputs.run_all == 'true'
        id: scrape_cosmed
        run: python scrape_cosmed.py
        continue-on-error: true

      - name: Prepare scrape info and commit
        id: prepare_info_commit
        run: |
          import json
          import datetime
          import os

          scrape_info = {}

          def get_product_count(file_path):
            try:
              with open(file_path, 'r') as f:
                data = json.load(f)
                return len(data)
            except (FileNotFoundError, json.JSONDecodeError):
              return 0

          watsons_count = get_product_count('./beauty4/watsons_products.json')
          poya_count = get_product_count('./beauty4/poya_products.json')
          cosmed_count = get_product_count('./beauty4/cosmed_products.json')

          now_taiwan = datetime.datetime.now(datetime.timezone(datetime.timedelta(hours=8))).strftime('%Y-%m-%d')

          scrape_info['watsons_last_scrape'] = now_taiwan
          scrape_info['watsons_item_count'] = watsons_count
          scrape_info['poya_last_scrape'] = now_taiwan
          scrape_info['poya_item_count'] = poya_count
          scrape_info['cosmed_last_scrape'] = now_taiwan
          scrape_info['cosmed_item_count'] = cosmed_count

          with open('./beauty4/scrape_info.json', 'w') as f:
            json.dump(scrape_info, f, indent=2)

          # Add and commit all changes (including scrape info)
          git add .
          git commit -m "Daily scrape: Update data and info" || echo "No changes to commit"
        shell: python

      - name: Pull latest changes
        run: |
          git pull origin master --rebase

      - name: Push all changes
        run: git push origin master
