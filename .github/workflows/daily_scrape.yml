name: Daily Product Scrape and Update
on:
  schedule:
    - cron: '0 20 * * *'
  workflow_dispatch:
    inputs:
      run_watsons:
        description: 'Run Watsons scraper'
        required: false
        type: boolean
        default: false
      run_poya:
        description: 'Run Poya scraper'
        required: false
        type: boolean
        default: false
      run_cosmed:
        description: 'Run Cosmed scraper'
        required: false
        type: boolean
        default: false
      run_all:
        description: 'Run all scrapers'
        required: false
        type: boolean
        default: true

jobs:
  scrape_watsons:
    if: github.event_name == 'schedule' || github.event.inputs.run_watsons == 'true' || github.event.inputs.run_all == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: master
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager beautifulsoup4 requests tqdm
      - name: Run Watsons scraping script
        id: scrape_watsons
        run: python scrape_watsons.py
        continue-on-error: true
      - name: Configure Git
        run: |
          git config --local user.email "amyhsiao@gmail.com"
          git config --local user.name "amyhsiao"
      - name: Commit Watsons changes
        if: steps.scrape_watsons.outcome == 'success'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Daily scrape: Update Watsons product data"
          file_pattern: beauty4/watsons_*.json
          push: false

  scrape_poya:
    if: github.event_name == 'schedule' || github.event.inputs.run_poya == 'true' || github.event.inputs.run_all == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager beautifulsoup4 requests tqdm
      - name: Run Poya scraping script
        id: scrape_poya
        run: python scrape_poya.py
        continue-on-error: true
      - name: Configure Git
        run: |
          git config --local user.email "amyhsiao@gmail.com"
          git config --local user.name "amyhsiao"
      - name: Commit Poya changes
        if: steps.scrape_poya.outcome == 'success'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Daily scrape: Update Poya product data"
          file_pattern: beauty4/poya_*.json
          push: false

  scrape_cosmed:
    if: github.event_name == 'schedule' || github.event.inputs.run_cosmed == 'true' || github.event.inputs.run_all == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager beautifulsoup4 requests tqdm
      - name: Run Cosmed scraping script
        id: scrape_cosmed
        run: python scrape_cosmed.py
        continue-on-error: true
      - name: Configure Git
        run: |
          git config --local user.email "amyhsiao@gmail.com"
          git config --local user.name "amyhsiao"
      - name: Commit Cosmed changes
        if: steps.scrape_cosmed.outcome == 'success'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Daily scrape: Update Cosmed product data"
          file_pattern: beauty4/cosmed_*.json
          push: false

  update_scrape_info:
    needs: [scrape_watsons, scrape_poya, scrape_cosmed]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Prepare scrape info and commit
        id: prepare_info_commit
        run: |
          import json
          import datetime
          import os

          scrape_info = {}

          def get_product_count(file_path):
            try:
              with open(file_path, 'r') as f:
                data = json.load(f)
                return len(data)
            except (FileNotFoundError, json.JSONDecodeError):
              return 0

          now_taiwan = datetime.datetime.now(datetime.timezone(datetime.timedelta(hours=8))).strftime('%Y-%m-%d')

          scrape_info['watsons_last_scrape'] = now_taiwan if steps.scrape_watsons.outcome == 'success' else scrape_info.get('watsons_last_scrape')
          scrape_info['watsons_item_count'] = get_product_count('./beauty4/watsons_products.json')

          scrape_info['poya_last_scrape'] = now_taiwan if steps.scrape_poya.outcome == 'success' else scrape_info.get('poya_last_scrape')
          scrape_info['poya_item_count'] = get_product_count('./beauty4/poya_products.json')

          scrape_info['cosmed_last_scrape'] = now_taiwan if steps.scrape_cosmed.outcome == 'success' else scrape_info.get('cosmed_last_scrape')
          scrape_info['cosmed_item_count'] = get_product_count('./beauty4/cosmed_products.json')

          with open('./beauty4/scrape_info.json', 'w') as f:
            json.dump(scrape_info, f, indent=2)

          git add beauty4/scrape_info.json
          git commit -m "Daily scrape: Update scrape info" || echo "No scrape info changes to commit"
        shell: python
      - name: Configure Git
        run: |
          git config --local user.email "amyhsiao@gmail.com"
          git config --local user.name "amyhsiao"

  push_changes:
    needs: [scrape_watsons, scrape_poya, scrape_cosmed, update_scrape_info]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: master
      - name: Pull latest changes
        run: |
          git pull origin master --rebase
      - name: Push all changes
        run: git push origin master
