name: Daily Product Scrape and Update
on:
  schedule:
    - cron: '0 20 * * *'
  workflow_dispatch:
    inputs:
      run_watsons:
        description: 'Run Watsons scraper'
        required: false
        type: boolean
        default: false
      run_poya:
        description: 'Run Poya scraper'
        required: false
        type: boolean
        default: false
      run_cosmed:
        description: 'Run Cosmed scraper'
        required: false
        type: boolean
        default: false
      run_all:
        description: 'Run all scrapers'
        required: false
        type: boolean
        default: true

jobs:
  scrape_watsons:
    if: ${{ github.event_name == 'schedule' || github.event.inputs.run_watsons == 'true' || github.event.inputs.run_all == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      watsons_success: ${{ steps.scrape.outcome == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: master
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager beautifulsoup4 requests tqdm
      - name: Run Watsons scraper
        id: scrape
        run: python scrape_watsons.py
        continue-on-error: true
      - name: Update Watsons scrape info
        if: ${{ steps.scrape.outcome == 'success' }}
        run: python update_scrape_info.py watsons true false false
      - name: Upload artifacts
        if: ${{ steps.scrape.outcome == 'success' }}
        uses: actions/upload-artifact@v3
        with:
          name: watsons-data
          path: |
            beauty4/watsons_*.json
            beauty4/scrape_info.json

  scrape_poya:
    if: ${{ github.event_name == 'schedule' || github.event.inputs.run_poya == 'true' || github.event.inputs.run_all == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      poya_success: ${{ steps.scrape.outcome == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: master
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager beautifulsoup4 requests tqdm
      - name: Run Poya scraper
        id: scrape
        run: python scrape_poya.py
        continue-on-error: true
      - name: Update Poya scrape info
        if: ${{ steps.scrape.outcome == 'success' }}
        run: python update_scrape_info.py poya false true false
      - name: Upload artifacts
        if: ${{ steps.scrape.outcome == 'success' }}
        uses: actions/upload-artifact@v3
        with:
          name: poya-data
          path: |
            beauty4/poya_*.json
            beauty4/scrape_info.json

  scrape_cosmed:
    if: ${{ github.event_name == 'schedule' || github.event.inputs.run_cosmed == 'true' || github.event.inputs.run_all == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      cosmed_success: ${{ steps.scrape.outcome == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: master
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager beautifulsoup4 requests tqdm
      - name: Run Cosmed scraper
        id: scrape
        run: python scrape_cosmed.py
        continue-on-error: true
      - name: Update Cosmed scrape info
        if: ${{ steps.scrape.outcome == 'success' }}
        run: python update_scrape_info.py cosmed false false true
      - name: Upload artifacts
        if: ${{ steps.scrape.outcome == 'success' }}
        uses: actions/upload-artifact@v3
        with:
          name: cosmed-data
          path: |
            beauty4/cosmed_*.json
            beauty4/scrape_info.json

  push_changes:
    needs: [scrape_watsons, scrape_poya, scrape_cosmed]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: master
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      - name: Move artifacts to correct locations
        run: |
          if [ -d "watsons-data" ]; then
            cp -r watsons-data/beauty4/* beauty4/
          fi
          if [ -d "poya-data" ]; then
            cp -r poya-data/beauty4/* beauty4/
          fi
          if [ -d "cosmed-data" ]; then
            cp -r cosmed-data/beauty4/* beauty4/
          fi
      - name: Configure Git
        run: |
          git config --local user.email "amyhsiao@gmail.com"
          git config --local user.name "amyhsiao"
      - name: Commit and push changes
        run: |
          git add beauty4/
          git commit -m "Daily scrape: Update product data" || echo "No changes to commit"
          git pull --rebase origin master
          git push origin master || (git pull --rebase origin master && git push origin master)